# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 4 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 4 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 4 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 4 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 4 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 4 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 4 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
# mixfit: fast
t3 = Sys.time()
binned_x = bin(x, seq(min(x), max(x), length = 100))
mod1x <- mixfit(binned_x, ncomp = ncomp)
t4 = Sys.time()
t4 - t3
plot(mod1x, ps = 'ggplot')
mod1x
seed
set.seed(142)
n = 100000
ncomp = 5
params = generate_params(ncomp)
x_large = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
# fitting mixture models on binned data
t3 = Sys.time()
x_binned = bin(x_large, seq(min(x_large), max(x_large), length = 100))
mod_binned <- mixfit(x_binned, ncomp = ncomp, max_iter = 1000)
t4 = Sys.time()
t4 - t3
mod_binned
plot(mod_binned, ps = 'ggplot', title = 'Normal Mixture Model for Binned Data')
set.seed(142)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixnormal(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed
set.seed(988)
n = 100000
ncomp = 5
params = generate_params(ncomp)
x_large = rmixweibull(n, pi = params$pi, mu = params$mu, sd = params$sd)
t3 = Sys.time()
x_binned = bin(x_large, seq(min(x_large), max(x_large), length = 100))
mod_binned <- mixfit(x_binned, ncomp = ncomp, family = 'weibull')
t4 = Sys.time()
t4 - t3
set.seed(988)
n = 100000
ncomp = 5
params = generate_params(ncomp)
x_large = rmixweibull(n, pi = params$pi, mu = params$mu, sd = params$sd)
set.seed(598)
n = 100000
ncomp = 5
params = generate_params(ncomp)
x_large = rmixweibull(n, pi = params$pi, mu = params$mu, sd = params$sd)
# fitting mixture models on binned data
t3 = Sys.time()
x_binned = bin(x_large, seq(min(x_large), max(x_large), length = 100))
mod_binned <- mixfit(x_binned, ncomp = ncomp, max_iter = 1000)
t4 = Sys.time()
t4 - t3
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 5 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixweibull(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 100000
ncomp = 4 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixweibull(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 1000000
ncomp = 4 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixweibull(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 1000000
ncomp = 4 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixweibull(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 1000000
ncomp = 4 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixweibull(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 1000000
ncomp = 4 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixweibull(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 1000000
ncomp = 4 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixweibull(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 1000000
ncomp = 4 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixweibull(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 1000000
ncomp = 4 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixweibull(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 1000000
ncomp = 4 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixweibull(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 1000000
ncomp = 4 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixweibull(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
seed = round(runif(1, 0, 1000))
set.seed(seed)
n = 1000000
ncomp = 4 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixweibull(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
mixfit: fast
t3 = Sys.time()
binned_x = bin(x, seq(min(x), max(x), length = 100))
mod1x <- mixfit(binned_x, ncomp = ncomp, family = 'weibull')
t4 = Sys.time()
t4 - t3
plot(mod1x, ps = 'ggplot')
mod1x
seed
n = 1000000
ncomp = 4 # round(runif(1, 2, 10))
# for(iter in 1:10) {
params = generate_params(ncomp)
x = rmixweibull(n, pi = params$pi, mu = params$mu, sd = params$sd)
hist(x, breaks = 100)
# mixfit: fast
t3 = Sys.time()
binned_x = bin(x, seq(min(x), max(x), length = 100))
mod1x <- mixfit(binned_x, ncomp = ncomp, family = 'weibull')
t4 = Sys.time()
t4 - t3
plot(mod1x, ps = 'ggplot')
mod1x
library(rmarkdown)
?pdf_document
install.packages('stevetemplates')
library(stevetemplates)
?article
getwd()
setwd('/Users/xiaozhen/Downloads')
article()
library(mixR)
knitr::opts_chunk$set(cache=FALSE,
message=FALSE, warning=FALSE,
fig.path='figs/',
cache.path = '_cache/',
fig.process = function(x) {
x2 = sub('-\\d+([.][a-z]+)$', '\\1', x)
if (file.rename(x, x2)) x2 else x
})
library(mixR)
set.seed(102)
# Normal (unequal variances)
x1 = rmixnormal(1000, c(0.3, 0.7), c(-2, 3), c(2, 1))
mod1 = mixfit(x1, ncomp = 2)
mod1
# Normal (equal variance)
mod1_ev = mixfit(x1, ncomp = 2, ev = TRUE)
mod1_ev
plot(mod1, breaks = 30, main = 'Normal Mixture (unequal variances)')
plot(mod1_ev, breaks = 30, main = 'Normal Mixture (equal variance)')
plot(mod1, ps = 'ggplot', breaks = 30, title = 'Normal Mixture (unequal variances)')
plot(mod1_ev, ps = 'ggplot', breaks = 30, title = 'Normal Mixture (equal variance)')
plot(1:10, 1:10)
print(mod1)
library(mixR)
set.seed(247)
n = 1000000
ncomp = 4
params = generate_params(ncomp)
generate_params = function(ncomp = 2) {
pi = runif(ncomp)
low = runif(1, 0, 0)
upp = low + runif(1, 0, 10)
mu = runif(ncomp, low, upp)
sd = runif(ncomp, (max(mu) - min(mu)) / ncomp / 10, (max(mu) - min(mu)) / ncomp / 2)
list(pi = pi / sum(pi), mu = sort(mu), sd = sd)
}
set.seed(247)
n = 1000000
ncomp = 4
params = generate_params(ncomp)
x_large_weibull = rmixweibull(n, pi = params$pi, mu = params$mu, sd = params$sd)
x_binned_weibull = bin(x_large_weibull, seq(min(x_large_weibull), max(x_large_weibull), length = 100))
t5 = Sys.time()
mod_binned_weibull <- mixfit(x_binned_weibull, ncomp = ncomp, family = 'weibull')
t6 = Sys.time()
t6 - t5
mod_binned_weibull
plot(mod_binned_weibull, ps = 'ggplot', title = 'Weibull Mixture Model for Binned Data')
library(knitr)
?opts_chunk
install.packages("rticles")
